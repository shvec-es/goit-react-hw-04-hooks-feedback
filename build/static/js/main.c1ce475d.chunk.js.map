{"version":3,"sources":["styles.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Title","styled","h1","Wrapper","div","TitleSection","FeedbackWrapper","Button","button","Report","Notice","p","Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","index","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","feedbacks","values","reduce","acc","value","Number","parseInt","feedback","prevValue","ReactDOM","render","document","getElementById"],"mappings":"iQAEMA,EAAQC,IAAOC,GAAV,0EAKLC,EAAUF,IAAOG,IAAV,kJAQPC,EAAeJ,YAAOD,EAAPC,CAAH,iDAIZK,EAAkBL,IAAOG,IAAV,0EAKfG,EAASN,IAAOO,OAAV,8VAmBNC,EAASR,IAAOG,IAAV,8FAMNM,EAAST,IAAOU,EAAV,8F,OChCGC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,cAACT,EAAD,UAAeQ,IACdC,MCoBQC,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAACX,EAAD,UACGY,OAAOC,KAAKH,GAASI,KAAI,SAACC,EAAQC,GACjC,OACE,cAACf,EAAD,CAEEgB,KAAK,SACLC,KAAMH,EACNI,QAAS,kBAAMR,EAAgBI,IAJjC,SAMGA,GALIC,SCcFI,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,eAACtB,EAAD,WACE,uCAAUkB,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCCSC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACvB,EAAD,UAASuB,KCuDHC,MArDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAEMC,EAAY,CAAEZ,OAAMC,UAASC,OAC7BC,EAAQZ,OAAOsB,OAAOD,GAAWE,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,GACrEZ,EAAqBa,OAAOC,SAAUlB,EAAOG,EAAS,KAqB5D,OACE,gCACE,cAAC9B,EAAD,wCACA,eAACG,EAAD,WACE,cAAC,EAAD,CAASU,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBG,QAASuB,EAAWtB,gBAxBzB,SAAA6B,GAClB,OAAQA,GACN,IAAK,OACHV,GAAQ,SAAAW,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHV,GAAW,SAAAU,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHT,GAAO,SAAAS,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aAWA,cAAC,EAAD,CAASlC,MAAM,aAAf,SACGiB,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcE,QAAQ,kCC/ClCe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c1ce475d.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Title = styled.h1`\r\n  color: SaddleBrown;\r\n  text-align: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  border: 2px solid SaddleBrown;\r\n  border-radius: 5px;\r\n  width: 400px;\r\n  margin-top: 50px;\r\n  margin-left: 100px;\r\n`;\r\n\r\nconst TitleSection = styled(Title)`\r\n  font-size: 1.5em;\r\n`;\r\n\r\nconst FeedbackWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  color: Chocolate;\r\n  background: white;\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid Chocolate;\r\n  border-radius: 3px;\r\n  text-transform: capitalize;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: white;\r\n    background: Chocolate;\r\n    outline: 2px solid Chocolate;\r\n  }\r\n`;\r\n\r\nconst Report = styled.div`\r\n  font-size: 1.25em;\r\n  padding-left: 15px;\r\n  color: Chocolate;\r\n`;\r\n\r\nconst Notice = styled.p`\r\n  font-size: 1.25em;\r\n  text-align: center;\r\n  color: Chocolate;\r\n`;\r\n\r\nexport {\r\n  Title,\r\n  Wrapper,\r\n  TitleSection,\r\n  FeedbackWrapper,\r\n  Button,\r\n  Report,\r\n  Notice,\r\n};\r\n","import React from 'react';\r\nimport { TitleSection } from 'styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <TitleSection>{title}</TitleSection>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport { FeedbackWrapper, Button } from 'styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <FeedbackWrapper>\r\n      {Object.keys(options).map((option, index) => {\r\n        return (\r\n          <Button\r\n            key={index}\r\n            type=\"button\"\r\n            name={option}\r\n            onClick={() => onLeaveFeedback(option)}\r\n          >\r\n            {option}\r\n          </Button>\r\n        );\r\n      })}\r\n    </FeedbackWrapper>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.number.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport { Report } from 'styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <Report>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </Report>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport { Notice } from 'styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <Notice>{message}</Notice>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from 'react';\nimport Section from 'components/Section';\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Statistics from 'components/Statistics';\nimport Notification from 'components/Notification';\nimport { Title, Wrapper } from 'styles';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const feedbacks = { good, neutral, bad };\n  const total = Object.values(feedbacks).reduce((acc, value) => acc + value, 0);\n  const positivePercentage = Number.parseInt((good / total) * 100);\n\n  const handleClick = feedback => {\n    switch (feedback) {\n      case 'good':\n        setGood(prevValue => prevValue + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevValue => prevValue + 1);\n        break;\n\n      case 'bad':\n        setBad(prevValue => prevValue + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div>\n      <Title>Welcome to cafe Expresso!</Title>\n      <Wrapper>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={feedbacks} onLeaveFeedback={handleClick} />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}